openapi: 3.0.3
info:
  title: traQer
  description: Information about traQ usage
  version: 0.1.0
externalDocs:
  description: github
  url: https://github.com/alter334/traQer

servers:
  - url: https://traqer.trap.show/
tags:
  - name: ping
    description: pong
  - name: user
    description: ユーザ紐付き情報
  - name: channel
    description: チャンネル紐付き情報
  - name: stamp
    description: スタンプ紐付き情報(次ver以降で実装)
  - name: me
    description: 自己情報(次ver以降で実装)

paths:
  /ping:
    get:
      tags:
        - ping
      summary: 疎通を確認
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ping"
  /user:
    get:
      tags:
        - user
      summary: 全ユーザメッセージ数取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userData"
  /user/{userid}:
    get:
      tags:
        - user
      summary: ユーザ毎メッセージ数取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/userData"
  /user/group/{groupid}:
    get:
      tags:
        - user
      summary: グループ毎メッセージ数取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userData"
  /channel:
    get:
      tags:
        - channel
      summary: 全ユーザメッセージ数取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userData"
  /channel/{channelid}:
    get:
      tags:
        - channel
      summary: ユーザ毎メッセージ数取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/userData"
  
  
  
  
components:
  schemas:
    ping:
      type: string
      example: pong
    userData:
      type: object
      properties:
        userId:
          type: string
          description: ユーザUUID
        userName:
          type: string
          description: ユーザtraQID
        displayName:
          type: string
          description: ユーザ表示名
        homeChannelId:
          type: string
          description: ホームチャンネルUUID
        totalPostCount:
          type: integer
          description: 総投稿数
        dailyPostCount:
          type: integer
          description: 日投稿数

    channelData:
      type: object
      properties:
        userId:
          type: string
          description: チャンネルUUID
        totalPostCount:
          type: integer
          description: 総投稿数
        dailyPostCount:
          type: integer
          description: 日投稿数
    # task:
    #   type: object
    #   required:
    #     - id
    #     - title
    #     - description
    #     - condition
    #     - difficulty
    #     - dueDate
    #   properties:
    #     id:
    #       type: integer
    #       example: 1
    #     title:
    #       type: string
    #       example: 単位認定の申請
    #     description:
    #       type: string
    #       example: スコアレポートを教務課に提出する
    #     condition:
    #       type: integer
    #       example: 2
    #       description: タスクが出来る状況の状況ID(デフォルト=いつでもできるタスクは0)
    #     difficulty:
    #       type: integer
    #       example: 2
    #       description: "1:気軽にできる, 2: 普通, 3: ハードルが高い"
    #     dueDate:
    #       type: string
    #       format: date
    #       example: 2021-01-01
    # tasks:
    #   type: array
    #   items:
    #     $ref: "#/components/schemas/task"
    # condition:
    #   type: object
    #   required:
    #     - id
    #     - name
    #   properties:
    #     id:
    #       type: integer
    #       example: 1
    #     name:
    #       type: string
    #       example: どこでもできる
    # conditions:
    #   type: array
    #   items:
    #     $ref: "#/components/schemas/condition"
      